/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employeessystem;

import java.io.*;
import javax.swing.JOptionPane;
import java.util.*;

/**
 *
 * @author marka
 */
public class AddJob extends javax.swing.JFrame {
    
    private ArrayList<Job> jobs;

    /**
     * Creates new form AddJob
     */
    public AddJob() {
        initComponents();
        jobs=new ArrayList<>();
        populateArrayList();
        
    }
    
    //Returns true if text contains numbers,false otherwise.
    
        public boolean containsNumbers(String s){
        return (s.matches(".*[0-9].*"));
    }
        
       //Returns true if text contains a positive number, false otherwise.
        
     public boolean isPositiveInteger(String s) {

    if (s == null) {
        return false;
    }
    int length = s.length();
    if (length == 0) {
        return false;
    }
    if (s.charAt(0) == '-') {
            return false;
    }
    for (int i = 0; i < length; i++) {
        char c = s.charAt(i);
        boolean isDigit = (c >= '0' && c <= '9');
        if (!isDigit) {
            return false;
        }
    }
    return true;
}
        
    
    //This method reads the jobs from the jobs data file
    // and store them in the jobs arraylist
    public void populateArrayList(){
        try{
            FileInputStream file=new FileInputStream("Jobs.dat");
            ObjectInputStream inputFile=new ObjectInputStream(file);
            
            boolean endOfFile=false;
            
            //While we didnt reach the end of the file, we add each job in the file
            // to the jobs arraylist
            
            while(!endOfFile){
                try{
                    jobs.add((Job)inputFile.readObject());
                    
                }
                
                //To catch end of file exception
                catch(EOFException e){
                    endOfFile=true;
                }
                
                //To catch any exception that might occure
                catch (Exception f){
                   JOptionPane.showMessageDialog(null, f.getMessage());

                }
                
            }
            
            inputFile.close();
            
                    
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage(),"Message",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    //This method will take each job from the jobs arraylist and save it
    //in the jobs data file
    
    public void saveJobsToFile(){
        try{
            FileOutputStream file=new FileOutputStream("jobs.dat");
            ObjectOutputStream outputFile=new ObjectOutputStream(file);
            
            //for each job in the jobs arraylist, we write the job into the 
            //jobs.dat file as a job object
            for(Job job:jobs){
                outputFile.writeObject(job);
            }
            
            outputFile.close();
            
            
        }catch(IOException e){
      JOptionPane.showMessageDialog(null, e.getMessage());

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jobName = new javax.swing.JTextField();
        jobSalary = new javax.swing.JTextField();
        createButton = new javax.swing.JButton();

        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Create a new Job");

        jLabel2.setText("Job Name:");

        jLabel3.setText("Job Salary:");

        jobName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobNameActionPerformed(evt);
            }
        });

        createButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employeessystem/save.png"))); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jobSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                    .addComponent(jobName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(187, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(183, 183, 183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addGap(188, 188, 188))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jobName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jobSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(createButton)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jobNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobNameActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        
        String name=jobName.getText().trim();
        String salaryString=jobSalary.getText().trim();
        
        // Checking if the user has input valid data to add a new job
        
        if (name.isEmpty()|| salaryString.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all fields!");
        }
        else if(containsNumbers(name)){
            JOptionPane.showMessageDialog(null, "The job name can't contain numbers");
        }
        else if (!isPositiveInteger(salaryString)){
            JOptionPane.showMessageDialog(null, "The salary has to be in positive numbers");
        }
        
        //Do this when all the given data are valid to add a new job
        else{
            double salary=Double.parseDouble(salaryString);
            Job job= new Job(name, salary);
            
            jobs.add(job);
            saveJobsToFile();
         JOptionPane.showMessageDialog(null, "Successfully saved");
         jobName.setText("");
         jobSalary.setText("");

        }
            
        
     
    }//GEN-LAST:event_createButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddJob.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddJob().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jobName;
    private javax.swing.JTextField jobSalary;
    // End of variables declaration//GEN-END:variables
}
